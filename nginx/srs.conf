# SRS (Simple Realtime Server) Configuration
# Optimized for low-latency streaming with WebRTC support

listen              1935;
max_connections     1000;
srs_log_tank        console;
srs_log_level       info;

# HTTP API for stream management
http_api {
    enabled         on;
    listen          1985;
    crossdomain     on;
}

# HTTP callback for stream events
http_hooks {
    enabled         on;
    on_connect      http://backend:3001/api/rtmp/connect;
    on_close        http://backend:3001/api/rtmp/close;
    on_publish      http://backend:3001/api/rtmp/publish;
    on_unpublish    http://backend:3001/api/rtmp/unpublish;
    on_play         http://backend:3001/api/rtmp/play;
    on_stop         http://backend:3001/api/rtmp/stop;
}

# RTMP configuration
vhost __defaultVhost__ {
    # Enable HLS for fallback
    hls {
        enabled         on;
        hls_fragment    2;
        hls_window      10;
        hls_path        /var/www/hls;
        hls_m3u8_file   [app]/[stream].m3u8;
        hls_ts_file     [app]/[stream]-[seq].ts;
    }

    # Enable WebRTC for low-latency streaming
    webrtc {
        enabled         on;
        listen          8000;
        candidate       $CANDIDATE;
    }

    # Enable DVR for recording
    dvr {
        enabled         on;
        dvr_path        /var/www/dvr;
        dvr_plan        session;
        dvr_duration    30;
        dvr_wait_keyframe   on;
    }

    # Stream authentication
    refer {
        enabled         on;
        all             off;
        publish         http://backend:3001/api/rtmp/auth;
    }

    # Play authentication
    refer {
        enabled         on;
        all             off;
        play            http://backend:3001/api/rtmp/auth;
    }
}
