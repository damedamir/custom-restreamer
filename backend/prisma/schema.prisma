generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  streams Stream[]

  @@map("users")
}

model Stream {
  id          String   @id @default(cuid())
  name        String
  description String?
  slug        String   @unique
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user               User                @relation(fields: [userId], references: [id])
  streamStatus       StreamStatus?
  brandedUrl         BrandedUrl?
  streamConfiguration StreamConfiguration?

  @@map("streams")
}

model StreamConfiguration {
  id        String   @id @default(cuid())
  streamId  String   @unique
  rtmpUrl   String?
  hlsUrl    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  stream Stream @relation(fields: [streamId], references: [id])

  @@map("stream_configurations")
}

model BrandedUrl {
  id        String   @id @default(cuid())
  streamId  String   @unique
  customUrl String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  stream Stream @relation(fields: [streamId], references: [id])

  @@map("branded_urls")
}

model StreamStatus {
  id        String   @id @default(cuid())
  streamId  String   @unique
  isLive    Boolean  @default(false)
  viewers   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  stream Stream @relation(fields: [streamId], references: [id])

  @@map("stream_status")
}

model Viewer {
  id        String   @id @default(cuid())
  streamId  String
  sessionId String
  joinedAt  DateTime @default(now())
  leftAt    DateTime?

  @@map("viewers")
}